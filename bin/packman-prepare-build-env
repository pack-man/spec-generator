#!/bin/bash - 
#===============================================================================
#          FILE: packman-prepare-build-env.sh
#         USAGE: ./packman-prepare-build-env 
#   DESCRIPTION: checkout the metadata configuration for the package from the repo
#                and prepare the git ENV 
#       OPTIONS: ---
#  REQUIREMENTS: ---
#          BUGS: ---
#         NOTES: ---
#        AUTHOR: Jess Portnoy (), <jess@packman.io>
#  ORGANIZATION: Packman.
#       CREATED: 03/11/2016 12:47:11 PM GMT
#      REVISION:  ---
#===============================================================================

#set -o nounset                              # Treat unset variables as an error
DIRNAME=`dirname $0`
if [ ! -r /home/packman/etc/packman.rc ];then
	echo "Missing /home/packman/etc/packman.rc. Something is wrong with your ENV. Exiting."
	exit 1
fi
. /home/packman/etc/packman.rc
NEEDED_FILES="$PACKMAN_HOME/etc/package.rc $DIRNAME/packman-functions.rc"
for NEEDED_FILE in $NEEDED_FILES;do
        if [ ! -r $NEEDED_FILE ];then
                echo "Missing $NEEDED_FILE. Something is wrong with your ENV. Exiting."
                exit 2
        fi
        . $NEEDED_FILE
done


. $PACKMAN_HOME/etc/package.rc
add_github_com_to_known_hosts
git clone $PACKMAN_BASE_GIT_REPO/$PACKMAN_SPACE 
cd $PACKMAN_SPACE
git fetch --all
set +e
if ! git branch |grep -q ${BRANCH};then
        git checkout -b ${BRANCH}
else
        git checkout ${BRANCH}
fi
set -e
git config --global user.email $MAINTAINER_EMAIL 
git config --global user.name $MAINTAINER_NAME
TMP_BUILDDIR=~/build/tmp/$PACKAGE_NAME
rm -rf $TMP_BUILDDIR
mkdir $TMP_BUILDDIR
cd $TMP_BUILDDIR
wget $SOURCE_URL
ARCHIVE_NAME=`echo $SOURCE_URL|awk -F "/" '{print $NF}'`
if file $ARCHIVE_NAME|grep -i zip ;then
        EXTRACT_COMMAND="unzip"
else
        EXTRACT_COMMAND="tar xvf"
fi
$EXTRACT_COMMAND $ARCHIVE_NAME
rm $ARCHIVE_NAME
ORIG_DIR=`ls -d *`
if [ "$ORIG_DIR" != "$PACKAGE_NAME-$PACKAGE_VERSION" ];then
        mv $ORIG_DIR $PACKAGE_NAME-$PACKAGE_VERSION
fi
cd $PACKAGE_NAME-$PACKAGE_VERSION
rm `find . -name ".git" -o -name ".svn" -o -name ".csv" -o -name ".gitignore"`
FILES=`find . -type f`
# if the first line of the file is "^#!" - we need to set exec bit on
# if the file is an ELF executable binary, we also want the exec bit on, otherwise, set to off
for FILE in $FILES;do
        if head -1 $FILE | grep -q "^#!" ;then
                chmod +x $FILE
        elif file $FILE | grep -q "\s*ELF.*executable" ;then
                chmod +x $FILE
        else 
                chmod -x $FILE
        fi
done
cd -
tar zcf $PACKMAN_HOME/rpmbuild/SOURCES/$PACKAGE_NAME-$PACKAGE_VERSION.tar.gz $PACKAGE_NAME-$PACKAGE_VERSION 
# determine whether or not we're a noarch/build-indep package by analyzing source code
# then set @@BUILD_ARCH@@ accordingly in BuildArch or Architecture 

# try to detect the license and prompt if no LICENSE file exists, then download and add a LICENSE file accordingly to user selection

# auto detect config files
# auto detect init scripts
